From cfab75e7e1c1806efba8da73e6823a9cc5b76601 Mon Sep 17 00:00:00 2001
From: Docker CI <docker@example.com>
Date: Wed, 16 May 2018 10:35:39 +0000
Subject: [PATCH] Update to support latest cstruct and ppx_sexp_conv, and added
 missing ocplib-endian dependency

Signed-off-by: Marcello Seri <marcello.seri@citrix.com>
---
 _tags             |  2 +-
 bench/runnable.ml |  2 +-
 opam              |  3 ++-
 pkg/META          |  2 +-
 src/nocrypto.mli  | 28 ++++++++++++++--------------
 tests/testlib.ml  |  2 +-
 6 files changed, 20 insertions(+), 19 deletions(-)

diff --git a/_tags b/_tags
index 6d4e7de..c291666 100644
--- a/_tags
+++ b/_tags
@@ -1,7 +1,7 @@
 true: color(always)
 true: bin_annot, safe_string
 true: warn(A-4-29-33-40-41-42-43-34-44-48)
-true: package(bytes), package(cstruct)
+true: package(bytes), package(cstruct), package(ocplib-endian), package(ppx_sexp_conv.runtime-lib)
 
 <src>: include
 <src/*.ml{,i}>: package(zarith), package(sexplib), package(ppx_sexp_conv)
diff --git a/bench/runnable.ml b/bench/runnable.ml
index 506a6be..7b02df0 100644
--- a/bench/runnable.ml
+++ b/bench/runnable.ml
@@ -142,7 +142,7 @@ let rsa_feedback bits =
     Printf.printf "+ generating...\n%!";
     generate ~e bits in
   Printf.printf "%s\n%!"
-    (Sexplib.Sexp.to_string_hum (sexp_of_priv key));
+    (Ppx_sexp_conv_lib.Sexp.to_string_hum (sexp_of_priv key));
 
   let c =
     Printf.printf "+ encrypt...\n%!";
diff --git a/opam b/opam
index ad1dbc7..3d52c72 100644
--- a/opam
+++ b/opam
@@ -20,11 +20,12 @@ depends: [
   "topkg" {build}
   "cpuid" {build}
   "ocb-stubblr" {build}
-  "ppx_sexp_conv" {build}
+  "ppx_sexp_conv"
   "oUnit" {test}
   "cstruct"
   "zarith"
   "sexplib"
+  "ocplib-endian"
   ("mirage-no-xen" | ("mirage-xen" & "mirage-entropy" & "zarith-xen"))
   ("mirage-no-solo5" | ("mirage-solo5" & "mirage-entropy" & "zarith-freestanding"))
 ]
diff --git a/pkg/META b/pkg/META
index 242b2bb..258bfc4 100644
--- a/pkg/META
+++ b/pkg/META
@@ -1,6 +1,6 @@
 version = "%%VERSION_NUM%%"
 description = "Simple crypto for the modern age"
-requires = "cstruct zarith sexplib"
+requires = "cstruct zarith sexplib ocplib-endian ppx_sexp_conv.runtime-lib"
 archive(byte) = "nocrypto.cma"
 archive(native) = "nocrypto.cmxa"
 plugin(byte) = "nocrypto.cma"
diff --git a/src/nocrypto.mli b/src/nocrypto.mli
index 21fec3f..b7fae6e 100644
--- a/src/nocrypto.mli
+++ b/src/nocrypto.mli
@@ -214,8 +214,8 @@ module Hash : sig
   val module_of   : [< hash ] -> (module S)
 
   (**/**)
-  val hash_of_sexp : Sexplib.Sexp.t -> hash
-  val sexp_of_hash : hash -> Sexplib.Sexp.t
+  val hash_of_sexp : Ppx_sexp_conv_lib.Sexp.t -> hash
+  val sexp_of_hash : hash -> Ppx_sexp_conv_lib.Sexp.t
   (**/**)
 
 end
@@ -780,11 +780,11 @@ module Rsa : sig
   end
 
   (**/**)
-  val pub_of_sexp : Sexplib.Sexp.t -> pub
-  val sexp_of_pub : pub -> Sexplib.Sexp.t
+  val pub_of_sexp : Ppx_sexp_conv_lib.Sexp.t -> pub
+  val sexp_of_pub : pub -> Ppx_sexp_conv_lib.Sexp.t
 
-  val priv_of_sexp : Sexplib.Sexp.t -> priv
-  val sexp_of_priv : priv -> Sexplib.Sexp.t
+  val priv_of_sexp : Ppx_sexp_conv_lib.Sexp.t -> priv
+  val sexp_of_priv : priv -> Ppx_sexp_conv_lib.Sexp.t
   (**/**)
 
 end
@@ -867,11 +867,11 @@ module Dsa : sig
   end
 
   (**/**)
-  val pub_of_sexp : Sexplib.Sexp.t -> pub
-  val sexp_of_pub : pub -> Sexplib.Sexp.t
+  val pub_of_sexp : Ppx_sexp_conv_lib.Sexp.t -> pub
+  val sexp_of_pub : pub -> Ppx_sexp_conv_lib.Sexp.t
 
-  val priv_of_sexp : Sexplib.Sexp.t -> priv
-  val sexp_of_priv : priv -> Sexplib.Sexp.t
+  val priv_of_sexp : Ppx_sexp_conv_lib.Sexp.t -> priv
+  val sexp_of_priv : priv -> Ppx_sexp_conv_lib.Sexp.t
   (**/**)
 
 end
@@ -960,11 +960,11 @@ module Dh : sig
   end
 
   (**/**)
-  val group_of_sexp : Sexplib.Sexp.t -> group
-  val sexp_of_group : group -> Sexplib.Sexp.t
+  val group_of_sexp : Ppx_sexp_conv_lib.Sexp.t -> group
+  val sexp_of_group : group -> Ppx_sexp_conv_lib.Sexp.t
 
-  val secret_of_sexp : Sexplib.Sexp.t -> secret
-  val sexp_of_secret : secret -> Sexplib.Sexp.t
+  val secret_of_sexp : Ppx_sexp_conv_lib.Sexp.t -> secret
+  val sexp_of_secret : secret -> Ppx_sexp_conv_lib.Sexp.t
   (**/**)
 
 end
diff --git a/tests/testlib.ml b/tests/testlib.ml
index d4a8f08..d82365e 100644
--- a/tests/testlib.ml
+++ b/tests/testlib.ml
@@ -156,7 +156,7 @@ let b64_selftest n =
 let gen_rsa ~bits =
   let e     = Z.(if bits < 24 then ~$3 else ~$0x10001) in
   let key   = Rsa.(generate ~e bits) in
-  let key_s = Sexplib.Sexp.to_string_hum Rsa.(sexp_of_priv key) in
+  let key_s = Ppx_sexp_conv_lib.Sexp.to_string_hum Rsa.(sexp_of_priv key) in
   assert_equal
     ~msg:Printf.(sprintf "key size not %d bits:\n%s" bits key_s)
     bits Rsa.(priv_bits key);
-- 
1.8.3.1

