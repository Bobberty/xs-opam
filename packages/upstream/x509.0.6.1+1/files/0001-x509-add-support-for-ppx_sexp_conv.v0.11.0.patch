From 9b515187d79b4dbdfa23091e43ba5ba00a8b620b Mon Sep 17 00:00:00 2001
From: Marcello Seri <marcello.seri@citrix.com>
Date: Wed, 16 May 2018 12:04:24 +0100
Subject: [PATCH] x509: add support for ppx_sexp_conv.v0.11.0

Signed-off-by: Marcello Seri <marcello.seri@citrix.com>
---
 _tags        |  2 +-
 lib/x509.mli | 24 ++++++++++++------------
 opam         |  2 +-
 pkg/META     |  2 +-
 pkg/pkg.ml   |  0
 5 files changed, 15 insertions(+), 15 deletions(-)
 mode change 100644 => 100755 pkg/pkg.ml

diff --git a/_tags b/_tags
index b51ae60..ab12b4b 100644
--- a/_tags
+++ b/_tags
@@ -1,6 +1,6 @@
 true : color(always), bin_annot, principal, safe_string
 true : warn(+A-4-41-42-44)
-true : package(result asn1-combinators ptime cstruct nocrypto sexplib astring)
+true : package(result asn1-combinators ptime cstruct nocrypto sexplib astring ppx_sexp_conv.runtime-lib)
 
 <lib> : include
 <lib/x509_certificate.ml> : package(ppx_sexp_conv)
diff --git a/lib/x509.mli b/lib/x509.mli
index 90f7a8e..4aa6245 100644
--- a/lib/x509.mli
+++ b/lib/x509.mli
@@ -49,10 +49,10 @@
 type t
 
 (** [t_of_sexp sexp] is [certificate], the unmarshalled [sexp]. *)
-val t_of_sexp : Sexplib.Sexp.t -> t
+val t_of_sexp : Ppx_sexp_conv_lib.Sexp.t -> t
 
 (** [sexp_of_t certificate] is [sexp], the marshalled [certificate]. *)
-val sexp_of_t : t -> Sexplib.Sexp.t
+val sexp_of_t : t -> Ppx_sexp_conv_lib.Sexp.t
 
 (** {1 Basic operations on a certificate} *)
 
@@ -136,10 +136,10 @@ type component = [
 type distinguished_name = component list
 
 (** [distinguished_name_of_sexp sexp] is a [distinguished_name], the unmarshalled [sexp]. *)
-val distinguished_name_of_sexp : Sexplib.Sexp.t -> distinguished_name
+val distinguished_name_of_sexp : Ppx_sexp_conv_lib.Sexp.t -> distinguished_name
 
 (** [sexp_of_distinguished_name dn] is [sexp], the marshalled [dn]. *)
-val sexp_of_distinguished_name : distinguished_name -> Sexplib.Sexp.t
+val sexp_of_distinguished_name : distinguished_name -> Ppx_sexp_conv_lib.Sexp.t
 
 (** [distinguished_name_to_string dn] is [string], the string
     representation of the {{!distinguished_name}dn}. *)
@@ -507,10 +507,10 @@ module Validation : sig
   ]
 
   (** [ca_error_of_sexp sexp] is [ca_error], the unmarshalled [sexp]. *)
-  val ca_error_of_sexp : Sexplib.Sexp.t -> ca_error
+  val ca_error_of_sexp : Ppx_sexp_conv_lib.Sexp.t -> ca_error
 
   (** [sexp_of_ca_error ca_error] is [sexp], the marshalled [ca_error]. *)
-  val sexp_of_ca_error : ca_error -> Sexplib.Sexp.t
+  val sexp_of_ca_error : ca_error -> Ppx_sexp_conv_lib.Sexp.t
 
   (** [ca_error_to_string validation_error] is [string], the string representation of the [ca_error]. *)
   val ca_error_to_string : ca_error -> string
@@ -567,10 +567,10 @@ module Validation : sig
   ]
 
   (** [chain_error_of_sexp sexp] is [chain_error], the unmarshalled [sexp]. *)
-  val chain_error_of_sexp : Sexplib.Sexp.t -> chain_error
+  val chain_error_of_sexp : Ppx_sexp_conv_lib.Sexp.t -> chain_error
 
   (** [sexp_of_chain_error chain_error] is [sexp], the marshalled [chain_error]. *)
-  val sexp_of_chain_error : chain_error -> Sexplib.Sexp.t
+  val sexp_of_chain_error : chain_error -> Ppx_sexp_conv_lib.Sexp.t
 
   (** [chain_error_to_string validation_error] is [string], the string representation of the [chain_error]. *)
   val chain_error_to_string : chain_error -> string
@@ -606,10 +606,10 @@ module Validation : sig
   ]
 
   (** [validation_error_of_sexp sexp] is [validation_error], the unmarshalled [sexp]. *)
-  val validation_error_of_sexp : Sexplib.Sexp.t -> validation_error
+  val validation_error_of_sexp : Ppx_sexp_conv_lib.Sexp.t -> validation_error
 
   (** [sexp_of_validation_error validation_error] is [sexp], the marshalled [validation_error]. *)
-  val sexp_of_validation_error : validation_error -> Sexplib.Sexp.t
+  val sexp_of_validation_error : validation_error -> Ppx_sexp_conv_lib.Sexp.t
 
   (** [validation_error_to_string validation_error] is [string], the string representation of the [validation_error]. *)
   val validation_error_to_string : validation_error -> string
@@ -704,11 +704,11 @@ module Authenticator : sig
 
   (** [a_of_sexp sexp] is [authenticator], the unmarshalled
   [sexp].  Note: only {!null} is supported. *)
-  val a_of_sexp : Sexplib.Sexp.t -> a
+  val a_of_sexp : Ppx_sexp_conv_lib.Sexp.t -> a
 
   (** [sexp_of_a authenticator] is [sexp], the marshalled
   [authenticator].  Note: always emits {!null}. *)
-  val sexp_of_a : a -> Sexplib.Sexp.t
+  val sexp_of_a : a -> Ppx_sexp_conv_lib.Sexp.t
 end
 
 (** Encodings *)
diff --git a/opam b/opam
index 039e948..8b7cb79 100644
--- a/opam
+++ b/opam
@@ -19,7 +19,7 @@ build-test: [
 depends: [
   "ocamlfind" {build}
   "ocamlbuild" {build}
-  "ppx_sexp_conv" {build}
+  "ppx_sexp_conv" 
   "topkg" {build}
   "result"
   "cstruct" {>= "1.6.0"}
diff --git a/pkg/META b/pkg/META
index 32dfa05..f1a11bf 100644
--- a/pkg/META
+++ b/pkg/META
@@ -1,6 +1,6 @@
 version = "%%VERSION_NUM%%"
 description = "Pure X.509 Public Key Infrastructure in OCaml"
-requires = "result cstruct sexplib nocrypto asn1-combinators astring ptime"
+requires = "result cstruct sexplib nocrypto asn1-combinators astring ptime ppx_sexp_conv.runtime-lib"
 archive(byte) = "x509.cma"
 archive(native) = "x509.cmxa"
 plugin(byte) = "x509.cma"
diff --git a/pkg/pkg.ml b/pkg/pkg.ml
old mode 100644
new mode 100755
-- 
2.17.0

